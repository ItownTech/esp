/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.4 at Sat Dec 07 20:42:12 2019. */

#ifndef PB_COVERCONFIG_PB_H_INCLUDED
#define PB_COVERCONFIG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CoverConfigMessage {
    uint8_t position;
    uint8_t direction;
    uint8_t hand_pull;
    uint8_t weak_switch;
    uint8_t power_switch;
    uint8_t pin_rx;
    uint8_t pin_tx;
    uint8_t pin_led;
    uint8_t pin_btn;
/* @@protoc_insertion_point(struct:CoverConfigMessage) */
} CoverConfigMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define CoverConfigMessage_init_default          {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define CoverConfigMessage_init_zero             {0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define CoverConfigMessage_position_tag          1
#define CoverConfigMessage_direction_tag         2
#define CoverConfigMessage_hand_pull_tag         3
#define CoverConfigMessage_weak_switch_tag       4
#define CoverConfigMessage_power_switch_tag      5
#define CoverConfigMessage_pin_rx_tag            20
#define CoverConfigMessage_pin_tx_tag            21
#define CoverConfigMessage_pin_led_tag           22
#define CoverConfigMessage_pin_btn_tag           23

/* Struct field encoding specification for nanopb */
extern const pb_field_t CoverConfigMessage_fields[10];

/* Maximum encoded size of messages (where known) */
#define CoverConfigMessage_size                  58

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define COVERCONFIG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
